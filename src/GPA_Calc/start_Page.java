/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GPA_Calc;

import java.awt.Color;
import java.awt.print.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.text.MessageFormat;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oSikaNi iSraeL
 */
public class start_Page extends javax.swing.JFrame {
    
    DefaultTableModel model;
    
    int xMouse;
    int yMouse;

    /**
     * Creates new form start_Page
     */
    public start_Page() {
        initComponents();
       
        grade.setVisible(false);
   
       
        model =(DefaultTableModel) jTable1.getModel(); 
        overlay.setBackground(new Color(0,0,0,50));
        
    }
     //   private int course_no =0;

       
        
        public void getSum(){
       
             int sum =0;
           float sum_1=0;
            for (int i=0; i < jTable1.getRowCount(); i++){
            
            sum  = sum   + Integer.parseInt(jTable1.getValueAt(i, 1).toString());
            sum_1  = sum_1   + Float.parseFloat(jTable1.getValueAt(i, 4).toString());
            }
             total_crd.setText(Integer.toString(sum));
            total_gp.setText(Float.toString(sum_1));
             
             float total = sum_1/sum;
             your_gpa.setText(Float.toString(total));
             
              if(total >4.00){
              
                  class_.setText("1st Class");
              }
              else if (total >=3.00 && total<=3.399){
              
                  class_.setText("2nd Class Upper");
              }
              else if (total >=2.00  && total <=2.99){
              
                   class_.setText("2nd Class Lower");
              
              }
              else if (total >=1.50 && total <=1.99){
              
                  class_.setText("Pass");
              
              }
              else {
              
                  class_.setText("Fail");
  
        }
           
        }
     
       
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        overlay = new javax.swing.JPanel();
        total_gp = new javax.swing.JLabel();
        class_ = new javax.swing.JLabel();
        total_crd = new javax.swing.JLabel();
        crd_hrs = new javax.swing.JComboBox<>();
        your_gpa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        reset = new javax.swing.JButton();
        course_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        GPA = new javax.swing.JButton();
        enter_btn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        mrk = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        grade_point = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        overlay.setBackground(new java.awt.Color(0, 0, 0));
        overlay.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(350, 100));
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        total_gp.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        total_gp.setForeground(new java.awt.Color(0, 0, 0));
        total_gp.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Total Grde Point", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        getContentPane().add(total_gp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 160, 70));

        class_.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        class_.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(class_, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, 160, 40));

        total_crd.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        total_crd.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Total Credit Hours", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        getContentPane().add(total_crd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 200, 80));

        crd_hrs.setBackground(new java.awt.Color(202, 246, 165));
        crd_hrs.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        crd_hrs.setForeground(new java.awt.Color(0, 0, 0));
        crd_hrs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one...", "1", "2", "3", "4" }));
        crd_hrs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                crd_hrsKeyPressed(evt);
            }
        });
        getContentPane().add(crd_hrs, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 160, 40));

        your_gpa.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        your_gpa.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Your GPA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        getContentPane().add(your_gpa, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 200, 80));

        jScrollPane1.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jTable1.setBackground(new java.awt.Color(202, 246, 165));
        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Credit hours", "Marks", "Grade", "Grade Point"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(false);
        jTable1.setOpaque(false);
        jTable1.setRowHeight(18);
        jTable1.setRowMargin(2);
        jTable1.setSelectionBackground(new java.awt.Color(182, 214, 192));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 720, 200));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 530, 170, 10));

        reset.setBackground(new java.awt.Color(186, 217, 198));
        reset.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        reset.setForeground(new java.awt.Color(0, 0, 0));
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Reset_15px.png"))); // NOI18N
        reset.setText("Reset");
        reset.setToolTipText("Reset Table");
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        reset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resetKeyPressed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, 90, 30));

        course_name.setBackground(new java.awt.Color(202, 246, 165));
        course_name.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        course_name.setForeground(new java.awt.Color(0, 0, 0));
        course_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                course_nameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                course_nameKeyTyped(evt);
            }
        });
        getContentPane().add(course_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 190, 40));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Marks");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("A+ = 85-100    A = 80-84    B+ = 75-79    B = 70-74    C+ = 65-69    C = 60-64    D+ = 55-59    D = 50-54,  F = Below 50");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 95, 650, 30));

        jLabel24.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Course name");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jButton1.setBackground(new java.awt.Color(186, 217, 198));
        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Trash_15px.png"))); // NOI18N
        jButton1.setText("Delete");
        jButton1.setIconTextGap(0);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, -1, -1));

        jButton4.setBackground(new java.awt.Color(188, 218, 191));
        jButton4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("CGPA");
        jButton4.setToolTipText("CGPA Calculation");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 490, -1, -1));

        GPA.setBackground(new java.awt.Color(202, 245, 166));
        GPA.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        GPA.setForeground(new java.awt.Color(0, 0, 0));
        GPA.setText("GPA");
        GPA.setToolTipText("Calculate GPA");
        GPA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GPAActionPerformed(evt);
            }
        });
        getContentPane().add(GPA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, -1, -1));

        enter_btn.setBackground(new java.awt.Color(184, 214, 201));
        enter_btn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        enter_btn.setForeground(new java.awt.Color(0, 0, 0));
        enter_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Checked_25px_2.png"))); // NOI18N
        enter_btn.setText("Enter");
        enter_btn.setToolTipText("Update Table");
        enter_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enter_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enter_btnActionPerformed(evt);
            }
        });
        enter_btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enter_btnKeyPressed(evt);
            }
        });
        getContentPane().add(enter_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 100, 40));

        jButton2.setBackground(new java.awt.Color(202, 245, 166));
        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Print_20px.png"))); // NOI18N
        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, -1, 40));

        jLabel23.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Credit hours");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        mrk.setBackground(new java.awt.Color(197, 237, 175));
        mrk.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        mrk.setForeground(new java.awt.Color(0, 0, 0));
        mrk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mrkKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mrkKeyTyped(evt);
            }
        });
        getContentPane().add(mrk, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 130, 40));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancel_25px_8.png"))); // NOI18N
        jLabel4.setToolTipText("Exit");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 0, -1, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 60)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("GPA CACULATOR");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 470, 60));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logoNew.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, -1));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 153));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 480, 10));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 90));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 153));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 700, 10));

        jLabel2.setBackground(new java.awt.Color(197, 237, 175));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/background.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 740, 450));
        getContentPane().add(grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, -1, -1));

        grade_point.setText("jLabel1");
        getContentPane().add(grade_point, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuBar1.setBorder(null);
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenu1.setBackground(new java.awt.Color(204, 204, 204));
        jMenu1.setForeground(new java.awt.Color(0, 0, 0));
        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Menu_15px_1.png"))); // NOI18N
        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuItem1.setForeground(new java.awt.Color(0, 0, 0));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/About_15px_2.png"))); // NOI18N
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        
        
        System.exit(0);
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        
        int x =evt.getXOnScreen();
        int y =evt.getYOnScreen();
        
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        
        xMouse=evt.getX();
        yMouse=evt.getY();
        
    }//GEN-LAST:event_formMousePressed

    private void enter_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enter_btnActionPerformed
        // TODO add your handling code here:
        
        
        if (course_name.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(null, "Enter the Course name");
        }
        else if (crd_hrs.getSelectedItem().equals("Choose one...")){
        
            JOptionPane.showMessageDialog(null, " Select The Credit hour" );
        }
        else if(  mrk.getText().isEmpty()){
        
               JOptionPane.showMessageDialog(null, "Enter your marks" );
        
        }
        
       
        
        else{
        
       
      Double marks = Double.parseDouble(mrk.getText());
     
    
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A+");
          grade_point.setText(" "+1 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A");
          grade_point.setText(" "+1 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B+");
          grade_point.setText(" "+1 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B");
          grade_point.setText(" "+1 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C+");
          grade_point.setText(" "+1 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C");
          grade_point.setText(" "+1 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D+");
          grade_point.setText(" "+1 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D");
          grade_point.setText(" "+1 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
     
              

      
      //**********************************************************/////////////////////////////***********************
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A+");
          grade_point.setText(" "+2 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A");
          grade_point.setText(" "+2 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B+");
          grade_point.setText(" "+2 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B");
          grade_point.setText(" "+2 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C+");
          grade_point.setText(" "+2 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C");
          grade_point.setText(" "+2 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D+");
          grade_point.setText(" "+2 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D");
          grade_point.setText(" "+2 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
      
      
      
   //   **********************************************************************************/////////////////
   
   
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A+");
          grade_point.setText(" "+3 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A");
          grade_point.setText(" "+3 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B+");
          grade_point.setText(" "+3 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B");
          grade_point.setText(" "+3 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C+");
          grade_point.setText(" "+3 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C");
          grade_point.setText(" "+3 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D+");
          grade_point.setText(" "+3 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D");
          grade_point.setText(" "+3 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("F");
          grade_point.setText(" "+3 *0);
      
      }
     
      //**********************************************//////////////////////////////////////************************
      
      
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A+");
          grade_point.setText(" "+4 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A");
          grade_point.setText(" "+4 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B+");
          grade_point.setText(" "+4 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B");
          grade_point.setText(" "+4 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C+");
          grade_point.setText(" "+4 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C");
          grade_point.setText(" "+4 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D+");
          grade_point.setText(" "+4 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D");
          grade_point.setText(" "+4 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("F");
          grade_point.setText(" "+4 *0);
      
      }
      

if( marks>100){
     
    JOptionPane.showMessageDialog(null, "error");
        
}
else{

       model.insertRow(model.getRowCount(), new Object[]
        { 
        course_name.getText(),
         crd_hrs.getSelectedItem(),
      
         mrk.getText(),
         String.valueOf( grade.getText()),
         String.valueOf( grade_point.getText())
        });
}
       mrk.setText(null); 
       crd_hrs.setSelectedItem("Choose one...");
       course_name.setText(null);
        }
      
          //**********************************************************************/////////////////////**************
    }//GEN-LAST:event_enter_btnActionPerformed

    private void GPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GPAActionPerformed
        // TODO add your handling code here:
        
        if(
                model.getRowCount()==0 ||
                model.getColumnCount()==0){
        
            JOptionPane.showMessageDialog(null, "Enter your Marks");
        }
        else {
         getSum();
        }
   

    }//GEN-LAST:event_GPAActionPerformed

    private void mrkKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mrkKeyTyped
        // TODO add your handling code here:
     
        char check = evt.getKeyChar();
        if(
                !(Character.isDigit(check) 
                || check==KeyEvent.VK_BACK_SPACE 
                || check==KeyEvent.VK_ENTER
                || check==KeyEvent.VK_PERIOD)
                ){
            
            
            evt.consume();
            JOptionPane.showMessageDialog(null, "Figures only");
        
        }
        
      
 
        
        
    }//GEN-LAST:event_mrkKeyTyped

    private void mrkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mrkKeyPressed
        // TODO add your handling code here:
          if(evt.getKeyCode()==KeyEvent.VK_ENTER){
     
     
         if (course_name.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(null, "Enter the Course name");
        }
        else if (crd_hrs.getSelectedItem().equals("Choose one...")){
        
            JOptionPane.showMessageDialog(null, " Select The Credit hour" );
        }
        else if(  mrk.getText().isEmpty()){
        
               JOptionPane.showMessageDialog(null, "Enter your marks" );
        
        }
        
       
        
        else{
        
             
       
      Double marks = Double.parseDouble(mrk.getText());
     
    
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A+");
          grade_point.setText(" "+1 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A");
          grade_point.setText(" "+1 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B+");
          grade_point.setText(" "+1 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B");
          grade_point.setText(" "+1 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C+");
          grade_point.setText(" "+1 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C");
          grade_point.setText(" "+1 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D+");
          grade_point.setText(" "+1 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D");
          grade_point.setText(" "+1 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
     
              

      
      //**********************************************************/////////////////////////////***********************
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A+");
          grade_point.setText(" "+2 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A");
          grade_point.setText(" "+2 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B+");
          grade_point.setText(" "+2 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B");
          grade_point.setText(" "+2 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C+");
          grade_point.setText(" "+2 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C");
          grade_point.setText(" "+2 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D+");
          grade_point.setText(" "+2 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D");
          grade_point.setText(" "+2 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
      
      
      
   //   **********************************************************************************/////////////////
   
   
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A+");
          grade_point.setText(" "+3 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A");
          grade_point.setText(" "+3 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B+");
          grade_point.setText(" "+3 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B");
          grade_point.setText(" "+3 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C+");
          grade_point.setText(" "+3 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C");
          grade_point.setText(" "+3 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D+");
          grade_point.setText(" "+3 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D");
          grade_point.setText(" "+3 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("F");
          grade_point.setText(" "+3 *0);
      
      }
     
      //**********************************************//////////////////////////////////////************************
      
      
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A+");
          grade_point.setText(" "+4 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A");
          grade_point.setText(" "+4 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B+");
          grade_point.setText(" "+4 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B");
          grade_point.setText(" "+4 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C+");
          grade_point.setText(" "+4 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C");
          grade_point.setText(" "+4 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D+");
          grade_point.setText(" "+4 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D");
          grade_point.setText(" "+4 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("F");
          grade_point.setText(" "+4 *0);
      
      }
      

if( marks>100){
     
    JOptionPane.showMessageDialog(null, "error");
        
}
else{

       model.insertRow(model.getRowCount(), new Object[]
        { 
         course_name.getText(),
         crd_hrs.getSelectedItem(),
      
         mrk.getText(),
         String.valueOf( grade.getText()),
         String.valueOf( grade_point.getText())
        });
}
       mrk.setText(null); 
       crd_hrs.setSelectedItem("Choose one...");
       course_name.setText(null);
        }
  
     }
    }//GEN-LAST:event_mrkKeyPressed

    private void crd_hrsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_crd_hrsKeyPressed
        // TODO add your handling code here:
        
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
     
     
         if (course_name.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(null, "Enter the Course name");
        }
        else if (crd_hrs.getSelectedItem().equals("Choose one...")){
        
            JOptionPane.showMessageDialog(null, " Select The Credit hour" );
        }
        else if(  mrk.getText().isEmpty()){
        
               JOptionPane.showMessageDialog(null, "Enter your marks" );
        
        }
        
       
        
        else{
        
             
       
      Double marks = Double.parseDouble(mrk.getText());
     
    
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A+");
          grade_point.setText(" "+1 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A");
          grade_point.setText(" "+1 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B+");
          grade_point.setText(" "+1 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B");
          grade_point.setText(" "+1 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C+");
          grade_point.setText(" "+1 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C");
          grade_point.setText(" "+1 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D+");
          grade_point.setText(" "+1 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D");
          grade_point.setText(" "+1 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
     
              

      
      //**********************************************************/////////////////////////////***********************
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A+");
          grade_point.setText(" "+2 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A");
          grade_point.setText(" "+2 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B+");
          grade_point.setText(" "+2 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B");
          grade_point.setText(" "+2 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C+");
          grade_point.setText(" "+2 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C");
          grade_point.setText(" "+2 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D+");
          grade_point.setText(" "+2 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D");
          grade_point.setText(" "+2 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
      
      
      
   //   **********************************************************************************/////////////////
   
   
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A+");
          grade_point.setText(" "+3 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A");
          grade_point.setText(" "+3 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B+");
          grade_point.setText(" "+3 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B");
          grade_point.setText(" "+3 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C+");
          grade_point.setText(" "+3 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C");
          grade_point.setText(" "+3 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D+");
          grade_point.setText(" "+3 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D");
          grade_point.setText(" "+3 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("F");
          grade_point.setText(" "+3 *0);
      
      }
     
      //**********************************************//////////////////////////////////////************************
      
      
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A+");
          grade_point.setText(" "+4 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A");
          grade_point.setText(" "+4 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B+");
          grade_point.setText(" "+4 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B");
          grade_point.setText(" "+4 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C+");
          grade_point.setText(" "+4 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C");
          grade_point.setText(" "+4 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D+");
          grade_point.setText(" "+4 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D");
          grade_point.setText(" "+4 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("F");
          grade_point.setText(" "+4 *0);
      
      }
      

if( marks>100){
     
    JOptionPane.showMessageDialog(null, "error");
        
}
else{

       model.insertRow(model.getRowCount(), new Object[]
        { 
        course_name.getText(),
         crd_hrs.getSelectedItem(),
      
         mrk.getText(),
         String.valueOf( grade.getText()),
         String.valueOf( grade_point.getText())
        });
}
       mrk.setText(null); 
       crd_hrs.setSelectedItem("Choose one...");
       course_name.setText(null);
        }
  
     }
    }//GEN-LAST:event_crd_hrsKeyPressed

    private void enter_btnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enter_btnKeyPressed
        // TODO add your handling code here:
        
     
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
     
     
              if (course_name.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(null, "Enter the Course name");
        }
        else if (crd_hrs.getSelectedItem().equals("Choose one...")){
        
            JOptionPane.showMessageDialog(null, " Select The Credit hour" );
        }
        else if(  mrk.getText().isEmpty()){
        
               JOptionPane.showMessageDialog(null, "Enter your marks" );
        
        }
        
       
        
        else{
        
   
       
      Double marks = Double.parseDouble(mrk.getText());
     
    
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A+");
          grade_point.setText(" "+1 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A");
          grade_point.setText(" "+1 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B+");
          grade_point.setText(" "+1 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B");
          grade_point.setText(" "+1 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C+");
          grade_point.setText(" "+1 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C");
          grade_point.setText(" "+1 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D+");
          grade_point.setText(" "+1 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D");
          grade_point.setText(" "+1 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
     
              

      
      //**********************************************************/////////////////////////////***********************
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A+");
          grade_point.setText(" "+2 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A");
          grade_point.setText(" "+2 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B+");
          grade_point.setText(" "+2 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B");
          grade_point.setText(" "+2 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C+");
          grade_point.setText(" "+2 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C");
          grade_point.setText(" "+2 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D+");
          grade_point.setText(" "+2 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D");
          grade_point.setText(" "+2 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
      
      
      
   //   **********************************************************************************/////////////////
   
   
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A+");
          grade_point.setText(" "+3 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A");
          grade_point.setText(" "+3 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B+");
          grade_point.setText(" "+3 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B");
          grade_point.setText(" "+3 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C+");
          grade_point.setText(" "+3 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C");
          grade_point.setText(" "+3 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D+");
          grade_point.setText(" "+3 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D");
          grade_point.setText(" "+3 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("F");
          grade_point.setText(" "+3 *0);
      
      }
     
      //**********************************************//////////////////////////////////////************************
      
      
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A+");
          grade_point.setText(" "+4 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A");
          grade_point.setText(" "+4 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B+");
          grade_point.setText(" "+4 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B");
          grade_point.setText(" "+4 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C+");
          grade_point.setText(" "+4 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C");
          grade_point.setText(" "+4 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D+");
          grade_point.setText(" "+4 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D");
          grade_point.setText(" "+4 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("F");
          grade_point.setText(" "+4 *0);
      
      }
      

if( marks>100){
     
    JOptionPane.showMessageDialog(null, "error");
        
}
else{

       model.insertRow(model.getRowCount(), new Object[]
        { 
           course_name.getText(),
         crd_hrs.getSelectedItem(),
      
         mrk.getText(),
         String.valueOf( grade.getText()),
         String.valueOf( grade_point.getText())
        });
}
       mrk.setText(null); 
       crd_hrs.setSelectedItem("Choose one...");
       course_name.setText(null);
        }
  
     }
        
    }//GEN-LAST:event_enter_btnKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        setVisible(false);
        cGpa cp = new cGpa();
        cp.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        about cp = new about();
        cp.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
        MessageFormat header = new MessageFormat(" Print ");
        MessageFormat footer = new MessageFormat(" Page{0,number,integer} ");
        try{
            
           jTable1.print(JTable.PrintMode.NORMAL, header, footer);
        
        }
        
        catch(PrinterException e){
            
            System.err.format("Cannot print %s%n ",e.getMessage());
        
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
        while(model.getRowCount() >0){

            for (int i =0; i<model.getRowCount(); i++){

                model.removeRow(i);

            }

             your_gpa.setText(null);
             total_gp.setText(null);
             total_crd.setText(null);
             class_.setText(null);
        }
    }//GEN-LAST:event_resetActionPerformed

    private void resetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resetKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

            DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
            while(model.getRowCount() >0){

                for (int i =0; i<model.getRowCount(); i++){

                    model.removeRow(i);

                }

             your_gpa.setText(null);
             total_gp.setText(null);
             total_crd.setText(null);
             class_.setText(null);
            }
        }
    }//GEN-LAST:event_resetKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        int row=jTable1.getSelectedRow();

        if(row==-1){

            JOptionPane.showMessageDialog(null, "No Row Selected");

        }
        else{

            int c = JOptionPane.showConfirmDialog(null, "Do you realy wanna Delete","Delete",JOptionPane.YES_NO_OPTION);

            if(c==0){

                DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
                try{

                    int SelectedRowIndex = jTable1.getSelectedRow();
                    model.removeRow(SelectedRowIndex);
                }
                catch(Exception e) {

                    JOptionPane.showMessageDialog(null, e);
                }
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void course_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_course_nameKeyTyped
        // TODO add your handling code here:
        
        char check =evt.getKeyChar();
        
        if(Character.isDigit(check)){
        
            evt.consume();
            JOptionPane.showMessageDialog(null, "Figures ont ALOWED");
            
        }
    }//GEN-LAST:event_course_nameKeyTyped

    private void course_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_course_nameKeyPressed
        // TODO add your handling code here:
        
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
     
     
         if (course_name.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(null, "Enter the Course name");
        }
        else if (crd_hrs.getSelectedItem().equals("Choose one...")){
        
            JOptionPane.showMessageDialog(null, " Select The Credit hour" );
        }
        else if(  mrk.getText().isEmpty()){
        
               JOptionPane.showMessageDialog(null, "Enter your marks" );
        
        }
        
       
        
        else{
        
             
       
      Double marks = Double.parseDouble(mrk.getText());
     
    
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A+");
          grade_point.setText(" "+1 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("A");
          grade_point.setText(" "+1 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B+");
          grade_point.setText(" "+1 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("B");
          grade_point.setText(" "+1 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C+");
          grade_point.setText(" "+1 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("C");
          grade_point.setText(" "+1 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D+");
          grade_point.setText(" "+1 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("D");
          grade_point.setText(" "+1 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("1")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
     
              

      
      //**********************************************************/////////////////////////////***********************
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A+");
          grade_point.setText(" "+2 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("A");
          grade_point.setText(" "+2 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B+");
          grade_point.setText(" "+2 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("B");
          grade_point.setText(" "+2 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C+");
          grade_point.setText(" "+2 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("C");
          grade_point.setText(" "+2 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D+");
          grade_point.setText(" "+2 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("D");
          grade_point.setText(" "+2 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("2")){
      
          grade.setText("F");
          grade_point.setText(" "+1 *0);
      
      }
      
      
      
   //   **********************************************************************************/////////////////
   
   
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A+");
          grade_point.setText(" "+3 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("A");
          grade_point.setText(" "+3 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B+");
          grade_point.setText(" "+3 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("B");
          grade_point.setText(" "+3 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C+");
          grade_point.setText(" "+3 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("C");
          grade_point.setText(" "+3 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D+");
          grade_point.setText(" "+3 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("D");
          grade_point.setText(" "+3 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("3")){
      
          grade.setText("F");
          grade_point.setText(" "+3 *0);
      
      }
     
      //**********************************************//////////////////////////////////////************************
      
      
      
      if(marks >=85 && marks<=100 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A+");
          grade_point.setText(" "+4 *5.0);
      
      }
      
     else if(marks >=80 && marks<85 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("A");
          grade_point.setText(" "+4 *4.5);
      
      }
      
       else if(marks >=75 && marks<80 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B+");
          grade_point.setText(" "+4 *4.0);
      
      }
       else if(marks >=70 && marks<75 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("B");
          grade_point.setText(" "+4 *3.5);
      
      }
      
      else if(marks >=65 && marks<70 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C+");
          grade_point.setText(" "+4 *3.0);
      
      }
      
      else if(marks >=60 && marks<65 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("C");
          grade_point.setText(" "+4 *2.5);
      
      }
      
      else if(marks >=55 && marks<60 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D+");
          grade_point.setText(" "+4 *2.0);
      
      }
      
      else if(marks >=50 && marks<55 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("D");
          grade_point.setText(" "+4 *1.5);
      
      }
      else if(marks<50 && crd_hrs.getSelectedItem().equals("4")){
      
          grade.setText("F");
          grade_point.setText(" "+4 *0);
      
      }
      

if( marks>100){
     
    JOptionPane.showMessageDialog(null, "error");
        
}
else{

       model.insertRow(model.getRowCount(), new Object[]
        { 
        course_name.getText(),
         crd_hrs.getSelectedItem(),
      
         mrk.getText(),
         String.valueOf( grade.getText()),
         String.valueOf( grade_point.getText())
        });
}
       mrk.setText(null); 
       crd_hrs.setSelectedItem("Choose one...");
       course_name.setText(null);
        }
  
     }
    }//GEN-LAST:event_course_nameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new start_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GPA;
    private javax.swing.JLabel class_;
    private javax.swing.JTextField course_name;
    private javax.swing.JComboBox<String> crd_hrs;
    private javax.swing.JButton enter_btn;
    private javax.swing.JLabel grade;
    private javax.swing.JLabel grade_point;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mrk;
    private javax.swing.JPanel overlay;
    private javax.swing.JButton reset;
    private javax.swing.JLabel total_crd;
    private javax.swing.JLabel total_gp;
    private javax.swing.JLabel your_gpa;
    // End of variables declaration//GEN-END:variables
}
